// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package vanousova.repository;

import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;
import vanousova.model.QZamestnanec;
import vanousova.model.Zamestnanec;
import vanousova.repository.ZamestnanecCustom;
import vanousova.repository.ZamestnanecImpl;

privileged aspect ZamestnanecImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: ZamestnanecImpl implements ZamestnanecCustom;
    
    declare @type: ZamestnanecImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ZamestnanecImpl.JMENO = "jmeno";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ZamestnanecImpl.PRIJMENI = "prijmeni";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ZamestnanecImpl.LOGIN = "login";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ZamestnanecImpl.HODINOVA___SAZBA = "hodinova_sazba";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ZamestnanecImpl.POZICE = "pozice";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Zamestnanec> ZamestnanecImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QZamestnanec zamestnanec = QZamestnanec.zamestnanec;
        
        JPQLQuery<Zamestnanec> query = from(zamestnanec);
        
        Path<?>[] paths = new Path<?>[] {zamestnanec.jmeno,zamestnanec.prijmeni,zamestnanec.login,zamestnanec.hodinova_sazba,zamestnanec.pozice};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(JMENO, zamestnanec.jmeno)
			.map(PRIJMENI, zamestnanec.prijmeni)
			.map(LOGIN, zamestnanec.login)
			.map(HODINOVA___SAZBA, zamestnanec.hodinova_sazba)
			.map(POZICE, zamestnanec.pozice);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, zamestnanec);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Zamestnanec> ZamestnanecImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        
        QZamestnanec zamestnanec = QZamestnanec.zamestnanec;
        
        JPQLQuery<Zamestnanec> query = from(zamestnanec);
        
        Path<?>[] paths = new Path<?>[] {zamestnanec.jmeno,zamestnanec.prijmeni,zamestnanec.login,zamestnanec.hodinova_sazba,zamestnanec.pozice};        
        applyGlobalSearch(globalSearch, query, paths);
        
        // Also, filter by the provided ids
        query.where(zamestnanec.id.in(ids));
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(JMENO, zamestnanec.jmeno)
			.map(PRIJMENI, zamestnanec.prijmeni)
			.map(LOGIN, zamestnanec.login)
			.map(HODINOVA___SAZBA, zamestnanec.hodinova_sazba)
			.map(POZICE, zamestnanec.pozice);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, zamestnanec);
    }
    
}
