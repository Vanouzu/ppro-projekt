// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package vanousova.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import vanousova.repository.Zakaznik;
import vanousova.service.impl.ZakaznikServiceImpl;

privileged aspect ZakaznikServiceImpl_Roo_Service_Impl {
    
    declare @type: ZakaznikServiceImpl: @Service;
    
    declare @type: ZakaznikServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private Zakaznik ZakaznikServiceImpl.zakaznik;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param zakaznik
     */
    @Autowired
    public ZakaznikServiceImpl.new(Zakaznik zakaznik) {
        setZakaznik(zakaznik);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return Zakaznik
     */
    public Zakaznik ZakaznikServiceImpl.getZakaznik() {
        return zakaznik;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param zakaznik
     */
    public void ZakaznikServiceImpl.setZakaznik(Zakaznik zakaznik) {
        this.zakaznik = zakaznik;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param zakaznik
     */
    @Transactional
    public void ZakaznikServiceImpl.delete(vanousova.model.Zakaznik zakaznik) {
        getZakaznik().delete(zakaznik);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<vanousova.model.Zakaznik> ZakaznikServiceImpl.save(Iterable<vanousova.model.Zakaznik> entities) {
        return getZakaznik().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ZakaznikServiceImpl.delete(Iterable<Long> ids) {
        List<vanousova.model.Zakaznik> toDelete = getZakaznik().findAll(ids);
        getZakaznik().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Zakaznik
     */
    @Transactional
    public vanousova.model.Zakaznik ZakaznikServiceImpl.save(vanousova.model.Zakaznik entity) {
        return getZakaznik().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Zakaznik
     */
    public vanousova.model.Zakaznik ZakaznikServiceImpl.findOne(Long id) {
        return getZakaznik().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Zakaznik
     */
    public vanousova.model.Zakaznik ZakaznikServiceImpl.findOneForUpdate(Long id) {
        return getZakaznik().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<vanousova.model.Zakaznik> ZakaznikServiceImpl.findAll(Iterable<Long> ids) {
        return getZakaznik().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<vanousova.model.Zakaznik> ZakaznikServiceImpl.findAll() {
        return getZakaznik().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ZakaznikServiceImpl.count() {
        return getZakaznik().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<vanousova.model.Zakaznik> ZakaznikServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getZakaznik().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<vanousova.model.Zakaznik> ZakaznikServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getZakaznik().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param nazev
     * @param pageable
     * @return Page
     */
    public Page<vanousova.model.Zakaznik> ZakaznikServiceImpl.findByNazev(String nazev, Pageable pageable) {
        return getZakaznik().findByNazev(nazev, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param nazev
     * @return Long
     */
    public long ZakaznikServiceImpl.countByNazev(String nazev) {
        return getZakaznik().countByNazev(nazev);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<vanousova.model.Zakaznik> ZakaznikServiceImpl.getEntityType() {
        return vanousova.model.Zakaznik.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ZakaznikServiceImpl.getIdType() {
        return Long.class;
    }
    
}
